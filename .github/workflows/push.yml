name: Tests

on: [push, pull_request]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Get Python version
        id: python-version
        run: echo ::set-output name=version::$(python -c "import sys; print('-'.join(str(v) for v in sys.version_info))")
      - name: Install Poetry
        uses: dschep/install-poetry-action@v1.3
        with:
          create_virtualenvs: 'true'
      - name: Set Poetry config
        run: |
          poetry config virtualenvs.in-project true
      - name: Create poetry.lock
        run: |
          poetry lock
      - name: Cache Poetry virtualenv
        uses: actions/cache@v1
        id: cache
        with:
          path: .venv
          key: poetry-venv-${{ runner.os }}-${{ steps.python-version.outputs.version }}-${{ hashFiles('**/poetry.lock') }}
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: poetry install
      - name: Test with Pytest and measure coverage
        run: poetry run pytest --cov-report=xml --cov=django_enhanced_settings tests/
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          file: ./coverage.xml
